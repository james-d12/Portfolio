---
import { CollectionEntry, getCollection } from 'astro:content';
import ProjectLayout from '../../layouts/ProjectLayout.astro';
import ProjectSkillList from '../../components/ProjectSkillList.astro';

interface Props {
	entry: CollectionEntry<'project'>;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
	const project = await getCollection('project');
	return project.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---
<ProjectLayout>
	<section class="section">
		<div class="project-main">
			<a class="hover:text-secondary underline text-lg" href="/"> Home</a>
			{">"}
			<a class="hover:text-secondary underline text-lg" href="/project/">Projects </a>
			<h2 class="text-6xl font-bold">{entry.data.title}</h2>
			<ProjectSkillList skills={entry.data.skills}/>
			<div class="content">
				{entry.data.img && <img src={entry.data.img} alt={entry.data.img_alt || ''} />}
				<Content/>
			</div>
		</div>
	</section>
</ProjectLayout>

<style>
	.project-main {
		max-width: 65ch;
		margin-inline: auto;
	}

	.content > :global(* + *) {
		@apply text-quaternary;
		margin-top: 1rem;
	}

	.content :global(ul) {
		@apply list-disc mx-5 mt-2
	}

	.content :global(h1),
	.content :global(h2),
	.content :global(h3),
	.content :global(h4),
	.content :global(h5) {
		@apply text-2xl font-bold text-white;
		margin: 1.5rem 0;
	}

	.content :global(strong) {
		@apply text-secondary
	}

	.content :global(h1) {
		@apply text-4xl md:text-5xl
	}

	.content :global(h2) {
		@apply text-3xl md:text-4xl
	}

	.content :global(h3) {
		@apply text-2xl md:text-3xl
	}

	.content :global(h4) {
		@apply text-xl md:text-2xl
	}


	.content :global(img) {
		margin-top: 1rem;
		border-radius: 1.5rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-family: var(--font-brand);
		font-weight: 600;
		line-height: 1.1;
		padding-inline-start: 1.5rem;
		border-inline-start: 0.25rem solid var(--accent-dark);
		color: var(--gray-0);
	}

	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}

	.back-link:hover,
	.back-link:focus,
	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

</style>